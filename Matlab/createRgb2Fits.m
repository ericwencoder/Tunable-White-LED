function [fitresult, gof] = createRgb2Fits(c, d_rg, d_rb, d_gb, d_gr, d_br, d_bg, doPlots)
%CREATERGB2FITS(C,D_RG,D_RB,D_GB,D_GR,D_BR,D_BG)
%  Create fits.
%
%  Data for 'redToGreen' fit:
%      X Input : c
%      Y Output: d_rg
%  Data for 'redToBlue' fit:
%      X Input : c
%      Y Output: d_rb
%  Data for 'greenToBlue' fit:
%      X Input : c
%      Y Output: d_gb
%  Data for 'greenToRed' fit:
%      X Input : c
%      Y Output: d_gr
%  Data for 'blueToRed' fit:
%      X Input : c
%      Y Output: d_br
%  Data for 'blueToGreen' fit:
%      X Input : c
%      Y Output: d_bg
%  Output:
%      fitresult : a cell-array of fit objects representing the fits.
%      gof : structure array with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 07-May-2016 19:27:49

%% Initialization.

% Initialize arrays to store fits and goodness-of-fit.
fitresult = cell( 6, 1 );
gof = struct( 'sse', cell( 6, 1 ), ...
    'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );

%% Fit: 'redToGreen'.
[xData, yData] = prepareCurveData( c, d_rg );

% Set up fittype and options.
ft = fittype( 'rat12' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [0.238306087550869 0.984564000963032 0.846597902117332 0.794511596394945];

% Fit model to data.
[fitresult{1}, gof(1)] = fit( xData, yData, ft, opts );

% Plot fit with data.
if doPlots
    figure( 'Name', 'redToGreen' );
    h = plot( fitresult{1}, xData, yData );
    legend( h, 'd_rg vs. c', 'redToGreen', 'Location', 'NorthEast' );
    % Label axes
    xlabel c
    ylabel d_rg
    grid on
end

%% Fit: 'redToBlue'.
[xData, yData] = prepareCurveData( c, d_rb );

% Set up fittype and options.
ft = fittype( 'rat12' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [0.0996423029616137 0.619505816445823 0.103814782651106 0.799061803589637];

% Fit model to data.
[fitresult{2}, gof(2)] = fit( xData, yData, ft, opts );

% Plot fit with data.
if doPlots
    figure( 'Name', 'redToBlue' );
    h = plot( fitresult{2}, xData, yData );
    legend( h, 'd_rb vs. c', 'redToBlue', 'Location', 'NorthEast' );
    % Label axes
    xlabel c
    ylabel d_rb
    grid on
end

%% Fit: 'greenToBlue'.
[xData, yData] = prepareCurveData( c, d_gb );

% Set up fittype and options.
ft = fittype( 'rat12' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [0.600407500351151 0.781679826661115 0.111533124684943 0.579329289388906];

% Fit model to data.
[fitresult{3}, gof(3)] = fit( xData, yData, ft, opts );

% Plot fit with data.
if doPlots
    figure( 'Name', 'greenToBlue' );
    h = plot( fitresult{3}, xData, yData );
    legend( h, 'd_gb vs. c', 'greenToBlue', 'Location', 'NorthEast' );
    % Label axes
    xlabel c
    ylabel d_gb
    grid on
end

%% Fit: 'greenToRed'.
[xData, yData] = prepareCurveData( c, d_gr );

% Set up fittype and options.
ft = fittype( 'rat12' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [0.898172311971638 0.463310567259345 0.398396426873099 0.104461114798391];

% Fit model to data.
[fitresult{4}, gof(4)] = fit( xData, yData, ft, opts );

% Plot fit with data.
if doPlots
    figure( 'Name', 'greenToRed' );
    h = plot( fitresult{4}, xData, yData );
    legend( h, 'd_gr vs. c', 'greenToRed', 'Location', 'NorthEast' );
    % Label axes
    xlabel c
    ylabel d_gr
    grid on
end

%% Fit: 'blueToRed'.
[xData, yData] = prepareCurveData( c, d_br );

% Set up fittype and options.
ft = fittype( 'rat12' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [0.165891122085342 0.360656504813112 0.880721941763713 0.7443521799962];

% Fit model to data.
[fitresult{5}, gof(5)] = fit( xData, yData, ft, opts );

% Plot fit with data.
if doPlots
    figure( 'Name', 'blueToRed' );
    h = plot( fitresult{5}, xData, yData );
    legend( h, 'd_br vs. c', 'blueToRed', 'Location', 'NorthEast' );
    % Label axes
    xlabel c
    ylabel d_br
    grid on
end

%% Fit: 'blueToGreen'.
[xData, yData] = prepareCurveData( c, d_bg );

% Set up fittype and options.
ft = fittype( 'rat12' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [0.418441479002589 0.997735979773324 0.911030403930781 0.550426888716037];

% Fit model to data.
[fitresult{6}, gof(6)] = fit( xData, yData, ft, opts );

% Plot fit with data.
if doPlots
    figure( 'Name', 'blueToGreen' );
    h = plot( fitresult{6}, xData, yData );
    legend( h, 'd_bg vs. c', 'blueToGreen', 'Location', 'NorthEast' );
    % Label axes
    xlabel c
    ylabel d_bg
    grid on
end

